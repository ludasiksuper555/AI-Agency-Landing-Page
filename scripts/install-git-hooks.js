/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Git hooks –∑–≥—ñ–¥–Ω–æ –∑ –≤–∏–º–æ–≥–∞–º–∏ ISO 27001
 *
 * –¶–µ–π —Å–∫—Ä–∏–ø—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î pre-commit —Ç–∞ pre-push —Ö—É–∫–∏ –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è
 * –±–µ–∑–ø–µ–∫–∏ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ Git –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–∏–º–æ–≥ ISO 27001
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// –®–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó Git hooks
const gitRoot = execSync('git rev-parse --show-toplevel').toString().trim();
const hooksDir = path.join(gitRoot, '.git', 'hooks');

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-commit —Ö—É–∫–∞
const preCommitHook = `#!/bin/sh

# Pre-commit —Ö—É–∫ –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ ISO 27001
echo "–ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–µ–∑–ø–µ–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ ISO 27001..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —á—É—Ç–ª–∏–≤—ñ –¥–∞–Ω—ñ
node "${path.join(gitRoot, 'scripts', 'secure-git-commit.js')}" --skip-push --message "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∫–æ–º—ñ—Ç" || exit 1

# –£—Å–ø—ñ—à–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
exit 0
`;

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-push —Ö—É–∫–∞
const prePushHook = `#!/bin/sh

# Pre-push —Ö—É–∫ –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ ISO 27001
echo "–ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–µ–∑–ø–µ–∫–∏ –ø–µ—Ä–µ–¥ push –∑–≥—ñ–¥–Ω–æ –∑ ISO 27001..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–≤–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
if [ -z "$(git config --get user.signingkey)" ]; then
  echo "\033[1;33m–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: GPG –ø—ñ–¥–ø–∏—Å–∞–Ω–Ω—è –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ GPG –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ ISO 27001.\033[0m"
  echo "–î–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥–∏:"
  echo "  gpg --full-generate-key"
  echo "  gpg --list-secret-keys --keyid-format=long"
  echo "  git config --global user.signingkey YOUR_KEY_ID"
  echo "  git config --global commit.gpgsign true"
  
  read -p "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ push –±–µ–∑ GPG –ø—ñ–¥–ø–∏—Å–∞–Ω–Ω—è? (y/N): " confirm
  if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
    exit 1
  fi
fi

# –£—Å–ø—ñ—à–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
exit 0
`;

/**
 * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î Git hook
 * @param {string} hookName - –ù–∞–∑–≤–∞ —Ö—É–∫–∞
 * @param {string} content - –í–º—ñ—Å—Ç —Ñ–∞–π–ª—É —Ö—É–∫–∞
 */
function installHook(hookName, content) {
  const hookPath = path.join(hooksDir, hookName);

  try {
    fs.writeFileSync(hookPath, content, { mode: 0o755 });
    console.log(`‚úÖ –•—É–∫ ${hookName} —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ`);
  } catch (error) {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ö—É–∫–∞ ${hookName}:`, error.message);
  }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó hooks
if (!fs.existsSync(hooksDir)) {
  try {
    fs.mkdirSync(hooksDir, { recursive: true });
  } catch (error) {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó ${hooksDir}:`, error.message);
    process.exit(1);
  }
}

// –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ö—É–∫—ñ–≤
installHook('pre-commit', preCommitHook);
installHook('pre-push', prePushHook);

console.log('\nüîí Git hooks –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ ISO 27001 —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
console.log('üìù –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ docs/ISO27001-GIT-SECURITY.md');
