const { Telegraf } = require('telegraf');
const { session } = require('telegraf/session');
const { Stage, Scenes } = require('telegraf/scenes');
const cron = require('node-cron');
const axios = require('axios');
const fs = require('fs').promises;
const path = require('path');

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –±–æ—Ç–∞
const config = {
  botToken: process.env.BOT_TOKEN,
  freelanceAPIs: {
    upwork: process.env.UPWORK_API_KEY,
    freelancer: process.env.FREELANCER_API_KEY,
    fiverr: process.env.FIVERR_API_KEY
  },
  openaiApiKey: process.env.OPENAI_API_KEY,
  searchKeywords: [
    'web development',
    'react',
    'nextjs',
    'javascript',
    'typescript',
    'frontend',
    'fullstack',
    'nodejs'
  ],
  maxProjectsPerDay: 100,
  maxProposalsPerDay: 20
};

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
const bot = new Telegraf(config.botToken);

// Middleware –¥–ª—è —Å–µ—Å—ñ–π
bot.use(session());

// –°—Ü–µ–Ω–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
const projectSearchScene = new Scenes.BaseScene('project-search');
const proposalGeneratorScene = new Scenes.BaseScene('proposal-generator');
const settingsScene = new Scenes.BaseScene('settings');

// –°—Ç–µ–π–¥–∂ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ü–µ–Ω–∞–º–∏
const stage = new Stage([projectSearchScene, proposalGeneratorScene, settingsScene]);
bot.use(stage.middleware());

// –ö–ª–∞—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
class ProjectManager {
  constructor() {
    this.projects = [];
    this.sentProposals = [];
    this.stats = {
      projectsFound: 0,
      proposalsSent: 0,
      responsesReceived: 0
    };
  }

  // –ü–æ—à—É–∫ –ø—Ä–æ–µ–∫—Ç—ñ–≤ –Ω–∞ —Ä—ñ–∑–Ω–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
  async searchProjects() {
    const allProjects = [];

    try {
      // –ü–æ—à—É–∫ –Ω–∞ Upwork
      const upworkProjects = await this.searchUpwork();
      allProjects.push(...upworkProjects);

      // –ü–æ—à—É–∫ –Ω–∞ Freelancer
      const freelancerProjects = await this.searchFreelancer();
      allProjects.push(...freelancerProjects);

      // –ü–æ—à—É–∫ –Ω–∞ Fiverr
      const fiverrProjects = await this.searchFiverr();
      allProjects.push(...fiverrProjects);

      // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
      const filteredProjects = this.filterRelevantProjects(allProjects);
      this.projects = filteredProjects.slice(0, config.maxProjectsPerDay);

      this.stats.projectsFound = this.projects.length;
      return this.projects;
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –ø—Ä–æ–µ–∫—Ç—ñ–≤:', error);
      return [];
    }
  }

  // –ü–æ—à—É–∫ –Ω–∞ Upwork
  async searchUpwork() {
    // –Ü–º—ñ—Ç–∞—Ü—ñ—è API –∑–∞–ø–∏—Ç—É –¥–æ Upwork
    return [
      {
        id: 'upwork_1',
        title: 'React Developer Needed',
        description: 'Looking for experienced React developer...',
        budget: '$1000-$5000',
        platform: 'upwork',
        skills: ['React', 'JavaScript', 'CSS'],
        postedDate: new Date(),
        clientRating: 4.8
      }
    ];
  }

  // –ü–æ—à—É–∫ –Ω–∞ Freelancer
  async searchFreelancer() {
    // –Ü–º—ñ—Ç–∞—Ü—ñ—è API –∑–∞–ø–∏—Ç—É –¥–æ Freelancer
    return [
      {
        id: 'freelancer_1',
        title: 'Next.js Website Development',
        description: 'Need a modern website built with Next.js...',
        budget: '$2000-$8000',
        platform: 'freelancer',
        skills: ['Next.js', 'TypeScript', 'TailwindCSS'],
        postedDate: new Date(),
        clientRating: 4.5
      }
    ];
  }

  // –ü–æ—à—É–∫ –Ω–∞ Fiverr
  async searchFiverr() {
    // –Ü–º—ñ—Ç–∞—Ü—ñ—è API –∑–∞–ø–∏—Ç—É –¥–æ Fiverr
    return [
      {
        id: 'fiverr_1',
        title: 'Full Stack Developer Required',
        description: 'Looking for full stack developer with Node.js...',
        budget: '$500-$3000',
        platform: 'fiverr',
        skills: ['Node.js', 'Express', 'MongoDB'],
        postedDate: new Date(),
        clientRating: 4.9
      }
    ];
  }

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤
  filterRelevantProjects(projects) {
    return projects
      .filter(project => {
        const titleLower = project.title.toLowerCase();
        const descriptionLower = project.description.toLowerCase();

        return config.searchKeywords.some(
          keyword => titleLower.includes(keyword) || descriptionLower.includes(keyword)
        );
      })
      .sort((a, b) => {
        // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –¥–∞—Ç–æ—é
        if (a.clientRating !== b.clientRating) {
          return b.clientRating - a.clientRating;
        }
        return new Date(b.postedDate) - new Date(a.postedDate);
      });
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é AI
  async generateProposal(project) {
    try {
      const prompt = `
        –°—Ç–≤–æ—Ä–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç—É:
        –ù–∞–∑–≤–∞: ${project.title}
        –û–ø–∏—Å: ${project.description}
        –ë—é–¥–∂–µ—Ç: ${project.budget}
        –ù–∞–≤–∏—á–∫–∏: ${project.skills.join(', ')}

        –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏:
        - –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—é –ø—ñ–¥ –ø—Ä–æ–µ–∫—Ç
        - –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—é —Ç–∞ –≤–ø–µ–≤–Ω–µ–Ω–æ—é
        - –ú—ñ—Å—Ç–∏—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏–π –¥–æ—Å–≤—ñ–¥
        - –ë—É—Ç–∏ –¥–æ–≤–∂–∏–Ω–æ—é 150-300 —Å–ª—ñ–≤
        - –ù–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π –º–æ–≤—ñ
      `;

      const response = await axios.post(
        'https://api.openai.com/v1/chat/completions',
        {
          model: 'gpt-3.5-turbo',
          messages: [{ role: 'user', content: prompt }],
          max_tokens: 500,
          temperature: 0.7
        },
        {
          headers: {
            Authorization: `Bearer ${config.openaiApiKey}`,
            'Content-Type': 'application/json'
          }
        }
      );

      return response.data.choices[0].message.content;
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó:', error);
      return this.getDefaultProposal(project);
    }
  }

  // –î–µ—Ñ–æ–ª—Ç–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è
  getDefaultProposal(project) {
    return `
–í—ñ—Ç–∞—é!

–Ø –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ –∑ 5+ —Ä–æ–∫–∞–º–∏ –¥–æ—Å–≤—ñ–¥—É –≤ ${project.skills.join(', ')}.
–í–∞—à –ø—Ä–æ–µ–∫—Ç "${project.title}" –¥—É–∂–µ —Ü—ñ–∫–∞–≤–∏–π –¥–ª—è –º–µ–Ω–µ.

–ú—ñ–π –¥–æ—Å–≤—ñ–¥ –≤–∫–ª—é—á–∞—î:
‚úÖ –†–æ–∑—Ä–æ–±–∫—É —Å—É—á–∞—Å–Ω–∏—Ö –≤–µ–±-–¥–æ–¥–∞—Ç–∫—ñ–≤
‚úÖ –†–æ–±–æ—Ç—É –∑ React, Next.js, TypeScript
‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–∞–ø—Ç–∏–≤–Ω–∏—Ö —Ç–∞ —à–≤–∏–¥–∫–∏—Ö —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤
‚úÖ –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é –∑ API —Ç–∞ –±–∞–∑–∞–º–∏ –¥–∞–Ω–∏—Ö

–ì–æ—Ç–æ–≤–∏–π –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –Ω–µ–≥–∞–π–Ω–æ —Ç–∞ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ —è–∫—ñ—Å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å—Ç—Ä–æ–∫.

–ë—É–¥—É —Ä–∞–¥–∏–π –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ–µ–∫—Ç—É!

–ó –ø–æ–≤–∞–≥–æ—é,
[–í–∞—à–µ —ñ–º'—è]
    `;
  }

  // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  async saveStats() {
    const statsPath = path.join(__dirname, 'data', 'stats.json');
    await fs.writeFile(statsPath, JSON.stringify(this.stats, null, 2));
  }

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  async loadStats() {
    try {
      const statsPath = path.join(__dirname, 'data', 'stats.json');
      const data = await fs.readFile(statsPath, 'utf8');
      this.stats = JSON.parse(data);
    } catch (error) {
      console.log('–°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
    }
  }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç—ñ–≤
const projectManager = new ProjectManager();

// –ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞
bot.start(ctx => {
  ctx.reply(
    'ü§ñ –í—ñ—Ç–∞—é –≤ TechMoneyBot!\n\n' +
      '–Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑—É–≤–∞—Ç–∏ –ø–æ—à—É–∫ –ø—Ä–æ–µ–∫—Ç—ñ–≤ —Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π.\n\n' +
      '–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n' +
      '/search - –ü–æ—à—É–∫ –Ω–æ–≤–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤\n' +
      '/proposals - –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π\n' +
      '/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–±–æ—Ç–∏\n' +
      '/settings - –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è\n' +
      '/help - –î–æ–ø–æ–º–æ–≥–∞'
  );
});

bot.command('search', async ctx => {
  ctx.reply('üîç –ü–æ—á–∏–Ω–∞—é –ø–æ—à—É–∫ –ø—Ä–æ–µ–∫—Ç—ñ–≤...');

  const projects = await projectManager.searchProjects();

  if (projects.length === 0) {
    ctx.reply('üòî –ù–æ–≤–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.');
    return;
  }

  ctx.reply(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${projects.length} –Ω–æ–≤–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤!`);

  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 5 –ø—Ä–æ–µ–∫—Ç—ñ–≤
  for (let i = 0; i < Math.min(5, projects.length); i++) {
    const project = projects[i];
    const message = `
üìã **${project.title}**
üí∞ –ë—é–¥–∂–µ—Ç: ${project.budget}
üè¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${project.platform}
‚≠ê –†–µ–π—Ç–∏–Ω–≥ –∫–ª—ñ—î–Ω—Ç–∞: ${project.clientRating}
üõ† –ù–∞–≤–∏—á–∫–∏: ${project.skills.join(', ')}

${project.description.substring(0, 200)}...
    `;

    ctx.reply(message, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üìù –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é', callback_data: `generate_${project.id}` },
            { text: 'üëÄ –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ', callback_data: `details_${project.id}` }
          ]
        ]
      }
    });
  }
});

bot.command('proposals', ctx => {
  ctx.scene.enter('proposal-generator');
});

bot.command('stats', async ctx => {
  await projectManager.loadStats();
  const stats = projectManager.stats;

  const message = `
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ TechMoneyBot**

üîç –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç—ñ–≤: ${stats.projectsFound}
üìù –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π: ${stats.proposalsSent}
üí¨ –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: ${stats.responsesReceived}
üìà –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: ${stats.proposalsSent > 0 ? ((stats.responsesReceived / stats.proposalsSent) * 100).toFixed(1) : 0}%
  `;

  ctx.reply(message);
});

bot.command('settings', ctx => {
  ctx.scene.enter('settings');
});

bot.command('help', ctx => {
  const helpMessage = `
ü§ñ **TechMoneyBot - –î–æ–≤—ñ–¥–∫–∞**

**–û—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:**
üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ 50-100 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤ —â–æ–¥–Ω—è
‚úçÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ 10-20 —è–∫—ñ—Å–Ω–∏—Ö –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π
üí∞ –ó–±—ñ–ª—å—à–µ–Ω–Ω—è —à–∞–Ω—Å—ñ–≤ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–µ–∫—Ç—ñ–≤ –≤ 3-5 —Ä–∞–∑—ñ–≤
‚è∞ –ï–∫–æ–Ω–æ–º—ñ—è 4-6 –≥–æ–¥–∏–Ω —â–æ–¥–Ω—è

**–ö–æ–º–∞–Ω–¥–∏:**
/start - –ü–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏
/search - –ü–æ—à—É–∫ –Ω–æ–≤–∏—Ö –ø—Ä–æ–µ–∫—Ç—ñ–≤
/proposals - –†–æ–±–æ—Ç–∞ –∑ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è–º–∏
/stats - –ü–µ—Ä–µ–≥–ª—è–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
/settings - –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞
/help - –¶—è –¥–æ–≤—ñ–¥–∫–∞

**–ü—ñ–¥—Ç—Ä–∏–º–∫–∞:** @your_support_username
  `;

  ctx.reply(helpMessage);
});

// –û–±—Ä–æ–±–∫–∞ callback –∑–∞–ø–∏—Ç—ñ–≤
bot.on('callback_query', async ctx => {
  const data = ctx.callbackQuery.data;

  if (data.startsWith('generate_')) {
    const projectId = data.replace('generate_', '');
    const project = projectManager.projects.find(p => p.id === projectId);

    if (project) {
      ctx.reply('‚è≥ –ì–µ–Ω–µ—Ä—É—é –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é...');
      const proposal = await projectManager.generateProposal(project);

      ctx.reply(`üìù **–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è:**\n\n${proposal}`, {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏', callback_data: `send_${projectId}` },
              { text: '‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏', callback_data: `edit_${projectId}` }
            ]
          ]
        }
      });
    }
  }

  if (data.startsWith('send_')) {
    const projectId = data.replace('send_', '');
    // –¢—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó
    projectManager.stats.proposalsSent++;
    await projectManager.saveStats();

    ctx.reply('‚úÖ –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!');
  }

  ctx.answerCbQuery();
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ –ø—Ä–æ–µ–∫—Ç—ñ–≤ –∫–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏
cron.schedule('0 */2 * * *', async () => {
  console.log('–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ –ø—Ä–æ–µ–∫—Ç—ñ–≤...');
  await projectManager.searchProjects();
});

// –©–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç –æ 9:00
cron.schedule('0 9 * * *', async () => {
  await projectManager.loadStats();
  const stats = projectManager.stats;

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–≤—ñ—Ç—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É
  const adminId = process.env.ADMIN_TELEGRAM_ID;
  if (adminId) {
    const report = `
üìä **–©–æ–¥–µ–Ω–Ω–∏–π –∑–≤—ñ—Ç TechMoneyBot**

üîç –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç—ñ–≤: ${stats.projectsFound}
üìù –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π: ${stats.proposalsSent}
üí¨ –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: ${stats.responsesReceived}
    `;

    bot.telegram.sendMessage(adminId, report);
  }
});

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
bot.catch((err, ctx) => {
  console.error('–ü–æ–º–∏–ª–∫–∞ –±–æ—Ç–∞:', err);
  ctx.reply('üòî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if (process.env.NODE_ENV === 'production') {
  // Webhook –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
  bot.launch({
    webhook: {
      domain: process.env.WEBHOOK_DOMAIN,
      port: process.env.PORT || 3000
    }
  });
} else {
  // Polling –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏
  bot.launch();
}

console.log('ü§ñ TechMoneyBot –∑–∞–ø—É—â–µ–Ω–æ!');

// Graceful shutdown
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

module.exports = { bot, projectManager };
