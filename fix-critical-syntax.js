const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
 * –í–∏–ø—Ä–∞–≤–ª—è—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ onClick handlers —Ç–∞ JSX —Å—Ç—Ä—É–∫—Ç—É—Ä—É
 */

const targetFiles = ['./components/ContactForm.tsx', './components/ExportOpportunitiesMap.tsx'];

function fixContactForm(content) {
  let fixed = content;

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É JSX –≤ ContactForm
  // –ü—Ä–æ–±–ª–µ–º–∞: form onSubmit={handleSubmit}><motion.div
  // –†—ñ—à–µ–Ω–Ω—è: –æ–±–≥–æ—Ä—Ç–∞—î–º–æ motion.div –≤ form –ø—Ä–∞–≤–∏–ª—å–Ω–æ
  fixed = fixed.replace(
    /<form onSubmit={handleSubmit}><motion\.div([^>]*)>/g,
    '<form onSubmit={handleSubmit}>\n      <motion.div$1>'
  );

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–∫—Ä–∏–≤–∞—é—á—ñ —Ç–µ–≥–∏
  fixed = fixed.replace(/<\/motion\.div>\s*<\/form>/g, '      </motion.div>\n    </form>');

  return fixed;
}

function fixExportMap(content) {
  let fixed = content;

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π onClick handler
  // –í—ñ–¥: onClick={() = className="absolute cursor-pointer"> setSelectedCountry(market.countryCode)}
  // –î–æ: onClick={() => setSelectedCountry(market.countryCode)} className="absolute cursor-pointer"
  fixed = fixed.replace(
    /onClick\(\(\)\s*=\s*className="([^"]*)">\s*([^}]+)\}/g,
    'onClick={() => $2} className="$1"'
  );

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω—à—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ onClick
  fixed = fixed.replace(/onClick\(\(\)\s*=\s*([^>]+)>\s*([^}]+)\}/g, 'onClick={() => $2}');

  return fixed;
}

function fixJSXStructure(content) {
  let fixed = content;

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∑–∞–∫—Ä–∏–≤–∞—é—á—ñ –¥—É–∂–∫–∏
  fixed = fixed.replace(/\}\s*;\s*$/gm, '}');

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏ —â–æ –º–æ–∂—É—Ç—å —Å–ø—Ä–∏—á–∏–Ω—è—Ç–∏ –ø–æ–º–∏–ª–∫–∏
  fixed = fixed.replace(/^\s*$/gm, '');

  // –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥–≤—ñ–π–Ω—ñ –∫—Ä–∞–ø–∫–∏ –∑ –∫–æ–º–æ—é
  fixed = fixed.replace(/;;/g, ';');

  return fixed;
}

function processFile(filePath) {
  try {
    console.log(`–û–±—Ä–æ–±–∫–∞ —Ñ–∞–π–ª—É: ${filePath}`);

    if (!fs.existsSync(filePath)) {
      console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${filePath}`);
      return false;
    }

    const content = fs.readFileSync(filePath, 'utf8');
    const originalContent = content;

    let fixedContent = content;

    // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ñ–∞–π–ª—É
    if (filePath.includes('ContactForm.tsx')) {
      fixedContent = fixContactForm(fixedContent);
    }

    if (filePath.includes('ExportOpportunitiesMap.tsx')) {
      fixedContent = fixExportMap(fixedContent);
    }

    // –ó–∞–≥–∞–ª—å–Ω—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è JSX —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
    fixedContent = fixJSXStructure(fixedContent);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –±—É–ª–∏ –∑–º—ñ–Ω–∏
    if (fixedContent !== originalContent) {
      fs.writeFileSync(filePath, fixedContent, 'utf8');
      console.log(`‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ: ${filePath}`);

      // –ü–æ–∫–∞–∑—É—î–º–æ —â–æ —Å–∞–º–µ –±—É–ª–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ
      const lines = originalContent.split('\n');
      const fixedLines = fixedContent.split('\n');

      for (let i = 0; i < Math.max(lines.length, fixedLines.length); i++) {
        if (lines[i] !== fixedLines[i]) {
          console.log(
            `   –†—è–¥–æ–∫ ${i + 1}: ${lines[i]?.substring(0, 50) || '(–≤–∏–¥–∞–ª–µ–Ω–æ)'} ‚Üí ${fixedLines[i]?.substring(0, 50) || '(–¥–æ–¥–∞–Ω–æ)'}`
          );
          break; // –ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—É –∑–º—ñ–Ω—É
        }
      }

      return true;
    } else {
      console.log(`‚ÑπÔ∏è  –ë–µ–∑ –∑–º—ñ–Ω: ${filePath}`);
      return false;
    }
  } catch (error) {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ ${filePath}:`, error.message);
    return false;
  }
}

function main() {
  console.log('üîß –ü–æ—á–∞—Ç–æ–∫ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫...');

  let processedFiles = 0;
  let fixedFiles = 0;

  for (const filePath of targetFiles) {
    processedFiles++;
    if (processFile(filePath)) {
      fixedFiles++;
    }
  }

  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:');
  console.log(`–û–±—Ä–æ–±–ª–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤: ${processedFiles}`);
  console.log(`–í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤: ${fixedFiles}`);

  if (fixedFiles > 0) {
    console.log('\n‚úÖ –ö—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    console.log('\nüìù –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:');
    console.log('1. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: npm run type-check');
    console.log('2. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—é');
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏');
  } else {
    console.log('\n‚ÑπÔ∏è  –ö—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main();
}

module.exports = {
  fixContactForm,
  fixExportMap,
  fixJSXStructure,
  processFile,
};
